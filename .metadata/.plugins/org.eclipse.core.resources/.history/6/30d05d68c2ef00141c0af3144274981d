package com.zaptech.androidnetwokpro;

import java.io.BufferedReader;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.net.HttpURLConnection;
import java.net.URL;

import org.json.JSONArray;
import org.json.JSONObject;

import android.app.Activity;
import android.app.ProgressDialog;
import android.content.Context;
import android.net.ConnectivityManager;
import android.net.NetworkInfo;
import android.os.AsyncTask;
import android.os.Bundle;
import android.view.View;
import android.view.View.OnClickListener;
import android.widget.Button;
import android.widget.EditText;
import android.widget.TextView;
import android.widget.Toast;

public class NetworkActivity extends Activity implements OnClickListener {
	Button btnGetJSON, btnParseJSON;
	EditText edURL;
	TextView tvJsonStream, tvParsedStream;
	ProgressDialog pd;

	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.activity_network);
		init();
	}

	public void init() {
		btnGetJSON = (Button) findViewById(R.id.btnGetJSONStream);
		btnParseJSON = (Button) findViewById(R.id.btnGetParseStream);
		edURL = (EditText) findViewById(R.id.edURL);
		tvJsonStream = (TextView) findViewById(R.id.tvJSONStream);
		tvParsedStream = (TextView) findViewById(R.id.tvParsedString);
		pd = new ProgressDialog(this);
		// Adding Listeners..
		btnGetJSON.setOnClickListener(this);
		btnParseJSON.setOnClickListener(this);
	}

	public void checkNetworkConnection() {
		String strURL = edURL.getText().toString();
		ConnectivityManager CM = (ConnectivityManager) getSystemService(Context.CONNECTIVITY_SERVICE);
		NetworkInfo netInfo = CM.getActiveNetworkInfo();
		if (netInfo != null || netInfo.isConnected()) {
			new DownloadTask().execute(strURL);
		} else {
			tvJsonStream.setText(getResources().getString(
					R.string.tvNetworkError));
		}

	}

	class DownloadTask extends AsyncTask<String, Void, String> {

		@Override
		protected void onPreExecute() {
			pd.setTitle(getResources().getString(R.string.txtPDTile));
			pd.setMessage(getResources().getString(R.string.txtPDMessage));
			pd.setCancelable(false);
			pd.show();
			super.onPreExecute();
		}

		@Override
		protected String doInBackground(String... urlArray) {
			return DownloadStream(urlArray[0]);
		}

		@Override
		protected void onPostExecute(String result) {
			if (pd.isShowing()) {
				pd.dismiss();
			}
			tvJsonStream.setText(result);
			super.onPostExecute(result);
		}

	}

	public String DownloadStream(String strUrl) {
		InputStream is;
		StringBuilder strBuilder;
		strBuilder = new StringBuilder();
		try {
			URL url = new URL(strUrl);
			HttpURLConnection conn = (HttpURLConnection) url.openConnection();
			conn.setReadTimeout(15000);
			conn.setConnectTimeout(15000);
			conn.setRequestMethod("GET");
			conn.setDoInput(true);
			conn.connect();
			if (conn.getResponseCode() == 200) {
				is = conn.getInputStream();
				if (is != null) {
					BufferedReader br = null;
					String line;

					br = new BufferedReader(new InputStreamReader(is));
					if ((line = br.readLine()) != null) {
						strBuilder.append(line);
					}
				}
			}

		} catch (Exception e) {
			e.printStackTrace();
		}

		return strBuilder.toString();
	}

	public void parseJson() {
		String strName, strNumber, strDateAdded;
		tvParsedStream.setText("");
		strName = "";
		strNumber = "";
		strDateAdded = "";
		StringBuilder sb1 = new StringBuilder();
		try {
			JSONObject jobj = new JSONObject(tvJsonStream.getText().toString());
			JSONArray jArray = jobj.optJSONArray("Android");
			for (int i = 0; i < jArray.length(); i++) {
				JSONObject jSubObj = jArray.getJSONObject(i);
				strName += jSubObj.getString("name").toString();
				strNumber += jSubObj.getString("number").toString();
				strDateAdded += jSubObj.getString("date_added").toString();
				sb1.append(jSubObj.getString("name"));
				sb1.append(jSubObj.getString("number"));
				sb1.append(jSubObj.getString("date_added"));
			}
		} catch (Exception e) {
			e.printStackTrace();
		}
		tvParsedStream.setText(sb1.toString());
	}

	@Override
	public void onClick(View v) {
		switch (v.getId()) {
		case R.id.btnGetJSONStream:
			btnParseJSON.setVisibility(1);
			tvJsonStream.setVisibility(1);
			try {
				checkNetworkConnection();
			} catch (Exception e) {
				e.printStackTrace();
			}
			break;
		case R.id.btnGetParseStream:
			tvParsedStream.setVisibility(1);
			parseJson();
			break;
		default:
			break;
		}
	}
}
